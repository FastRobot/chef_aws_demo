{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stands up a Chef Server from the Amazon Marketplace along with a linked workstation Ubuntu node",
  "Parameters": {
    "KeyPairName": {
      "Description": "Public/private key pair",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "SubnetId": {
      "Description": "VPC Subnet ID for EC2 Instances",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "VPC": {
      "Description": "VPC Id",
      "Type": "AWS::EC2::VPC::Id"
    },
    "RemoteAdminCIDR": {
      "Description": "CIDR Block or IP for SSH access",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "[a-zA-Z0-9]+\\..+"
    },
    "UserName": {
      "Description": "Username to be used to access the Chef Management WebUI",
      "Type": "String",
      "Default": "chefuser"
    },
    "UserPassword": {
      "Description": "Password for the user accessing Chef Management WebUI",
      "Type": "String"
    },
    "OrgName": {
      "Description": "Chef Organization to create",
      "Type": "String",
      "Default": "sampleorg",
      "AllowedPattern": "[a-z0-9]+"
    },
    "FirstName": {
      "Description": "Admin's First Name",
      "Type": "String",
      "Default": "SampleFirst"
    },
    "LastName": {
      "Description": "Admin's Last Name",
      "Type": "String",
      "Default": "SampleLast"
    },
    "AdminEmailAddress": {
      "Description": "Email address for Chef Administrator",
      "Type": "String",
      "Default": "admin@localhost.internal"
    },
    "ChefServerRegion": {
      "Description": "Which region to run the Chef Server from",
      "AllowedValues": [
        "us-west-2",
        "us-east-1"
      ],
      "Type": "String",
      "Default": "us-west-2"
    },
    "IncludeWorkstation": {
      "Description": "A value of 'true' includes a Chef workstation. For Chef Server only, set to 'false'",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Type": "String",
      "Default": "true"
    }
  },
  "Metadata": {
  "AWS::CloudFormation::Interface" : {
    "ParameterGroups" : [{
      "Label" : {"default": "Chef Configuration"},
      "Parameters" : ["OrgName", "UserName", "UserPassword", "FirstName",
        "LastName", "AdminEmailAddress", "ChefServerRegion", "IncludeWorkstation"]
    },{
      "Label" : {"default": "Network Configuration"},
      "Parameters" : ["KeyPairName", "SubnetId", "VPC", "RemoteAdminCIDR"]
    }]
  }
},
  "Conditions": {
    "WorkstationInstance": {
      "Fn::Equals": [
        {
          "Ref": "IncludeWorkstation"
        },
        "true"
      ]
    }
  },
  "Mappings": {
    "ChefAMI": {
      "us-east-1": {
        "flex": "ami-30393d5a"
      },
      "us-west-2": {
        "flex": "ami-95ba54f5"
      }
    },
    "Ubuntu1404AMI": {
      "us-east-1": {
        "64": "ami-d05e75b8"
      },
      "us-west-2": {
        "64": "ami-21b85141"
      },
      "us-west-1": {
        "64": "ami-df6a8b9b"
      },
      "eu-west-1": {
        "64": "ami-47a23a30"
      },
      "eu-central-1": {
        "64": "ami-accff2b1"
      },
      "ap-southeast-1": {
        "64": "ami-96f1c1c4"
      },
      "ap-northeast-1": {
        "64": "ami-936d9d93"
      },
      "sa-east-1": {
        "64": "ami-02952d6e"
      },
      "ap-southeast-2": {
        "64": "ami-4d883350"
      }
    }
  },
  "Resources": {
    "ChefServerEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "ChefServer"
        }
      }
    },
    "WaitForChefServerInstall": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "ChefServer",
      "Properties": {
        "Handle": {
          "Ref": "WaitForChefServerWaitHandle"
        },
        "Timeout": "2700"
      }
    },
    "WaitForChefServerWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Properties": {
      }
    },
    "WaitForChefWorkstationInstall": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Condition": "WorkstationInstance",
      "DependsOn": "ChefWorkstation",
      "Properties": {
        "Handle": {
          "Ref": "WaitForChefWorkstationWaitHandle"
        },
        "Timeout": "2700"
      }
    },
    "WaitForChefWorkstationWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Properties": {
      }
    },
    "ChefServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "ChefAMI",
            {
              "Ref": "ChefServerRegion"
            },
            "flex"
          ]
        },
        "InstanceType": "t2.medium",
        "SubnetId": {
          "Ref": "SubnetId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ChefServer"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "50",
              "VolumeType": "gp2"
            }
          }
        ],
        "SecurityGroupIds": [
          {
            "Ref": "ChefServerSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "chef-server-ctl user-create ",
                {
                  "Ref": "UserName"
                },
                " ",
                {
                  "Ref": "FirstName"
                },
                " ",
                {
                  "Ref": "LastName"
                },
                " ",
                {
                  "Ref": "AdminEmailAddress"
                },
                " ",
                {
                  "Ref": "UserPassword"
                },
                " -o ",
                {
                  "Ref": "OrgName"
                },
                " > /home/ec2-user/user.pem\n",
                "chef-server-ctl org-create ",
                {
                  "Ref": "OrgName"
                },
                " Chef Demo Org -a ",
                {
                  "Ref": "UserName"
                },
                " > /home/ec2-user/validator.pem\n",
                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",\"Reason\" : \"Configuration Complete\",\"UniqueId\" : \"ChefServer\", \"Data\" : \"Done\"}' \"",
                {
                  "Ref": "WaitForChefServerWaitHandle"
                },
                "\"",
                "\n"
              ]
            ]
          }
        }
      }
    },
    "ChefWorkstation": {
      "Type": "AWS::EC2::Instance",
      "Condition": "WorkstationInstance",
      "DependsOn": "WaitForChefServerInstall",
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "RootInstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "Ubuntu1404AMI",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        },
        "InstanceType": "t2.medium",
        "SubnetId": {
          "Ref": "SubnetId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "ChefWorkstation"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "50",
              "VolumeType": "gp2"
            }
          }
        ],
        "SecurityGroupIds": [
          {
            "Ref": "ChefWorkstationSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "apt-get update\n",
                "apt-get -y install git unzip python-pip jq\n",
                "pip install awscli\n",
                "cd /tmp\n",
                "curl -LO https://packages.chef.io/stable/ubuntu/12.04/chefdk_0.12.0-1_amd64.deb\n",
                "dpkg -i /tmp/chefdk_0.12.0-1_amd64.deb\n",
                "mkdir -p /home/ubuntu/.berkshelf\n",
                "echo '{ \"ssl\": { \"verify\": false } }' > /home/ubuntu/.berkshelf/config.json\n",
                "mkdir -p /home/ubuntu/starter_kit\n",
                "cd /home/ubuntu/starter_kit\n",
                "git clone https://github.com/FastRobot/chef-starter-extractor\n",
                "/opt/chefdk/embedded/bin/ruby chef-starter-extractor/getting_started.rb https://",
                {
                  "Fn::GetAtt": [
                    "ChefServer",
                    "PublicDnsName"
                  ]
                },
                " ",
                {
                  "Ref": "OrgName"
                },
                " ",
                {
                  "Ref": "UserName"
                },
                " ",
                {
                  "Ref": "UserPassword"
                },
                " ",
                {
                  "Ref": "ChefServer"
                },
                "\n",
                "cd /home/ubuntu\n",
                "git clone https://github.com/FastRobot/chef_aws_demo.git chef-repo\n",
                "unzip /home/ubuntu/starter_kit/chef-starter.zip chef-repo/.chef/*\n",
                "cd /home/ubuntu/chef-repo\n",
                "knife ssl fetch\n",
                "mkdir -p /home/ubuntu/.aws\n",
                "echo '[default]' > /home/ubuntu/.aws/config\n",
                "echo 'region=",
                {
                  "Ref": "AWS::Region"
                },
                "' >> /home/ubuntu/.aws/config\n",
                "echo 'output=json' >> /home/ubuntu/.aws/config\n",
                "echo 'export KITCHEN_DRIVER=ec2' >> /home/ubuntu/.bash_profile\n",
                "echo 'export AWS_DEFAULT_REGION=",
                {
                  "Ref": "AWS::Region"
                },
                "' >> /home/ubuntu/.bash_profile\n",
                "echo 'export AWS_SSH_KEY_ID=",
                {
                  "Ref": "KeyPairName"
                },
                "' >> /home/ubuntu/.bash_profile\n",
                "echo 'export SECURITY_GROUP_IDS=",
                {
                  "Ref": "ChefWorkstationSecurityGroup"
                },
                "' >> /home/ubuntu/.bash_profile\n",
                "echo 'export CHEF_KMS_KEYID=",
                {
                  "Ref": "ChefMasterKey"
                },
                "' >> /home/ubuntu/.bash_profile\n",
                "chown -R ubuntu:ubuntu /home/ubuntu\n",
                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",\"Reason\" : \"Configuration Complete\",\"UniqueId\" : \"ChefWorkstation\", \"Data\" : \"Done\"}' \"",
                {
                  "Ref": "WaitForChefWorkstationWaitHandle"
                },
                "\" \n",
                "echo Dishes are done, man\n"
              ]
            ]
          }
        }
      }
    },
    "ChefServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables SSH and HTTPS access to the Chef Server",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "RemoteAdminCIDR"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8443",
            "ToPort": "8443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "ChefWorkstationSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enables ssh access to ChefWorkstation",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "RemoteAdminCIDR"
            }
          }
        ]
      }
    },
    "TestKitchenIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "ChefWorkstationSecurityGroup" },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": { "Ref": "ChefWorkstationSecurityGroup" }
      }
    },
    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "RootInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "RootRole"
          }
        ]
      }
    },
    "ChefMasterKey": {
      "Type" : "AWS::KMS::Key",
      "Properties" : {
        "Description" : "protects a chef user key",
        "KeyPolicy" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Required /root",
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Fn::Join" : [
                  "",
                  [
                  "arn:aws:iam::",
                  { "Ref": "AWS::AccountId" },
                  ":root"
                  ]
                ]
                }
              },
              "Action": "kms:*",
              "Resource": "*"
            },
            {
              "Sid": "Enable IAM User Permissions",
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Fn::GetAtt" : ["RootRole", "Arn"] }
              },
              "Action": "kms:*",
              "Resource": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ChefServerDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "ChefServer",
          "PublicDnsName"
        ]
      },
      "Description": "Public DNS Name for the Chef Server, hit via https"
    },
    "ChefWorkstationDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "ChefWorkstation",
          "PublicDnsName"
        ]
      },
      "Description": "Public DNS Name for the Chef Workstation, login as user ubuntu",
      "Condition" : "WorkstationInstance"
    }
  }
}
